/* Please note that this file is generated by the VulkanSharp's generator. Do not edit directly.

   Licensed under the MIT license.

   Copyright 2016 Xamarin Inc

   This notice may not be removed from any source distribution.
   See LICENSE file for licensing details.
*/

using System;

namespace Vulkan
{
	public enum AttachmentLoadOp : int
	{
		Load = 0,
		Clear = 1,
		DontCare = 2,
	}

	public enum AttachmentStoreOp : int
	{
		Store = 0,
		DontCare = 1,
	}

	public enum BlendFactor : int
	{
		Zero = 0,
		One = 1,
		SrcColor = 2,
		OneMinusSrcColor = 3,
		DstColor = 4,
		OneMinusDstColor = 5,
		SrcAlpha = 6,
		OneMinusSrcAlpha = 7,
		DstAlpha = 8,
		OneMinusDstAlpha = 9,
		ConstantColor = 10,
		OneMinusConstantColor = 11,
		ConstantAlpha = 12,
		OneMinusConstantAlpha = 13,
		SrcAlphaSaturate = 14,
		Src1Color = 15,
		OneMinusSrc1Color = 16,
		Src1Alpha = 17,
		OneMinusSrc1Alpha = 18,
	}

	public enum BlendOp : int
	{
		Add = 0,
		Subtract = 1,
		ReverseSubtract = 2,
		Min = 3,
		Max = 4,
		ZeroExt = 1000148000,
		SrcExt = 1000148001,
		DstExt = 1000148002,
		SrcOverExt = 1000148003,
		DstOverExt = 1000148004,
		SrcInExt = 1000148005,
		DstInExt = 1000148006,
		SrcOutExt = 1000148007,
		DstOutExt = 1000148008,
		SrcAtopExt = 1000148009,
		DstAtopExt = 1000148010,
		XorExt = 1000148011,
		MultiplyExt = 1000148012,
		ScreenExt = 1000148013,
		OverlayExt = 1000148014,
		DarkenExt = 1000148015,
		LightenExt = 1000148016,
		ColordodgeExt = 1000148017,
		ColorburnExt = 1000148018,
		HardlightExt = 1000148019,
		SoftlightExt = 1000148020,
		DifferenceExt = 1000148021,
		ExclusionExt = 1000148022,
		InvertExt = 1000148023,
		InvertRgbExt = 1000148024,
		LineardodgeExt = 1000148025,
		LinearburnExt = 1000148026,
		VividlightExt = 1000148027,
		LinearlightExt = 1000148028,
		PinlightExt = 1000148029,
		HardmixExt = 1000148030,
		HslHueExt = 1000148031,
		HslSaturationExt = 1000148032,
		HslColorExt = 1000148033,
		HslLuminosityExt = 1000148034,
		PlusExt = 1000148035,
		PlusClampedExt = 1000148036,
		PlusClampedAlphaExt = 1000148037,
		PlusDarkerExt = 1000148038,
		MinusExt = 1000148039,
		MinusClampedExt = 1000148040,
		ContrastExt = 1000148041,
		InvertOvgExt = 1000148042,
		RedExt = 1000148043,
		GreenExt = 1000148044,
		BlueExt = 1000148045,
	}

	public enum BorderColor : int
	{
		FloatTransparentBlack = 0,
		IntTransparentBlack = 1,
		FloatOpaqueBlack = 2,
		IntOpaqueBlack = 3,
		FloatOpaqueWhite = 4,
		IntOpaqueWhite = 5,
	}

	[Flags]
	public enum RenderPassCreateFlags : int
	{
	}

	[Flags]
	public enum SamplerCreateFlags : int
	{
		SubsampledExt = 0x1,
		SubsampledCoarseReconstructionExt = 0x2,
	}

	public enum PipelineCacheHeaderVersion : int
	{
		One = 1,
	}

	[Flags]
	public enum DescriptorSetLayoutCreateFlags : int
	{
		PushDescriptorKhr = 0x1,
		UpdateAfterBindPoolExt = 0x2,
	}

	[Flags]
	public enum DeviceQueueCreateFlags : int
	{
		Protected = 0x1,
	}

	[Flags]
	public enum BufferCreateFlags : int
	{
		SparseBinding = 0x1,
		SparseResidency = 0x2,
		SparseAliased = 0x4,
		DeviceAddressCaptureReplayExt = 0x10,
		Protected = 0x8,
	}

	[Flags]
	public enum BufferUsageFlags : int
	{
		TransferSrc = 0x1,
		TransferDst = 0x2,
		UniformTexelBuffer = 0x4,
		StorageTexelBuffer = 0x8,
		UniformBuffer = 0x10,
		StorageBuffer = 0x20,
		IndexBuffer = 0x40,
		VertexBuffer = 0x80,
		IndirectBuffer = 0x100,
		TransformFeedbackBufferExt = 0x800,
		TransformFeedbackCounterBufferExt = 0x1000,
		ConditionalRenderingExt = 0x200,
		RayTracingNv = 0x400,
		ShaderDeviceAddressExt = 0x20000,
	}

	[Flags]
	public enum ColorComponentFlags : int
	{
		R = 0x1,
		G = 0x2,
		B = 0x4,
		A = 0x8,
	}

	public enum ComponentSwizzle : int
	{
		Identity = 0,
		Zero = 1,
		One = 2,
		R = 3,
		G = 4,
		B = 5,
		A = 6,
	}

	[Flags]
	public enum CommandPoolCreateFlags : int
	{
		Transient = 0x1,
		ResetCommandBuffer = 0x2,
		Protected = 0x4,
	}

	[Flags]
	public enum CommandPoolResetFlags : int
	{
		ReleaseResources = 0x1,
	}

	[Flags]
	public enum CommandBufferResetFlags : int
	{
		ReleaseResources = 0x1,
	}

	public enum CommandBufferLevel : int
	{
		Primary = 0,
		Secondary = 1,
	}

	[Flags]
	public enum CommandBufferUsageFlags : int
	{
		OneTimeSubmit = 0x1,
		RenderPassContinue = 0x2,
		SimultaneousUse = 0x4,
	}

	public enum CompareOp : int
	{
		Never = 0,
		Less = 1,
		Equal = 2,
		LessOrEqual = 3,
		Greater = 4,
		NotEqual = 5,
		GreaterOrEqual = 6,
		Always = 7,
	}

	[Flags]
	public enum CullModeFlags : int
	{
		None = 0,
		Front = 0x1,
		Back = 0x2,
		FrontAndBack = 0x00000003,
	}

	public enum DescriptorType : int
	{
		Sampler = 0,
		CombinedImageSampler = 1,
		SampledImage = 2,
		StorageImage = 3,
		UniformTexelBuffer = 4,
		StorageTexelBuffer = 5,
		UniformBuffer = 6,
		StorageBuffer = 7,
		UniformBufferDynamic = 8,
		StorageBufferDynamic = 9,
		InputAttachment = 10,
		InlineUniformBlockExt = 1000138000,
		AccelerationStructureNv = 1000165000,
	}

	public enum DynamicState : int
	{
		Viewport = 0,
		Scissor = 1,
		LineWidth = 2,
		DepthBias = 3,
		BlendConstants = 4,
		DepthBounds = 5,
		StencilCompareMask = 6,
		StencilWriteMask = 7,
		StencilReference = 8,
		ViewportWScalingNv = 1000087000,
		DiscardRectangleExt = 1000099000,
		SampleLocationsExt = 1000143000,
		ViewportShadingRatePaletteNv = 1000164004,
		ViewportCoarseSampleOrderNv = 1000164006,
		ExclusiveScissorNv = 1000205001,
	}

	[Flags]
	public enum FenceCreateFlags : int
	{
		Signaled = 0x1,
	}

	public enum PolygonMode : int
	{
		Fill = 0,
		Line = 1,
		Point = 2,
		FillRectangleNv = 1000153000,
	}

	public enum Format : int
	{
		Undefined = 0,
		R4G4UnormPack8 = 1,
		R4G4B4A4UnormPack16 = 2,
		B4G4R4A4UnormPack16 = 3,
		R5G6B5UnormPack16 = 4,
		B5G6R5UnormPack16 = 5,
		R5G5B5A1UnormPack16 = 6,
		B5G5R5A1UnormPack16 = 7,
		A1R5G5B5UnormPack16 = 8,
		R8Unorm = 9,
		R8Snorm = 10,
		R8Uscaled = 11,
		R8Sscaled = 12,
		R8Uint = 13,
		R8Sint = 14,
		R8Srgb = 15,
		R8G8Unorm = 16,
		R8G8Snorm = 17,
		R8G8Uscaled = 18,
		R8G8Sscaled = 19,
		R8G8Uint = 20,
		R8G8Sint = 21,
		R8G8Srgb = 22,
		R8G8B8Unorm = 23,
		R8G8B8Snorm = 24,
		R8G8B8Uscaled = 25,
		R8G8B8Sscaled = 26,
		R8G8B8Uint = 27,
		R8G8B8Sint = 28,
		R8G8B8Srgb = 29,
		B8G8R8Unorm = 30,
		B8G8R8Snorm = 31,
		B8G8R8Uscaled = 32,
		B8G8R8Sscaled = 33,
		B8G8R8Uint = 34,
		B8G8R8Sint = 35,
		B8G8R8Srgb = 36,
		R8G8B8A8Unorm = 37,
		R8G8B8A8Snorm = 38,
		R8G8B8A8Uscaled = 39,
		R8G8B8A8Sscaled = 40,
		R8G8B8A8Uint = 41,
		R8G8B8A8Sint = 42,
		R8G8B8A8Srgb = 43,
		B8G8R8A8Unorm = 44,
		B8G8R8A8Snorm = 45,
		B8G8R8A8Uscaled = 46,
		B8G8R8A8Sscaled = 47,
		B8G8R8A8Uint = 48,
		B8G8R8A8Sint = 49,
		B8G8R8A8Srgb = 50,
		A8B8G8R8UnormPack32 = 51,
		A8B8G8R8SnormPack32 = 52,
		A8B8G8R8UscaledPack32 = 53,
		A8B8G8R8SscaledPack32 = 54,
		A8B8G8R8UintPack32 = 55,
		A8B8G8R8SintPack32 = 56,
		A8B8G8R8SrgbPack32 = 57,
		A2R10G10B10UnormPack32 = 58,
		A2R10G10B10SnormPack32 = 59,
		A2R10G10B10UscaledPack32 = 60,
		A2R10G10B10SscaledPack32 = 61,
		A2R10G10B10UintPack32 = 62,
		A2R10G10B10SintPack32 = 63,
		A2B10G10R10UnormPack32 = 64,
		A2B10G10R10SnormPack32 = 65,
		A2B10G10R10UscaledPack32 = 66,
		A2B10G10R10SscaledPack32 = 67,
		A2B10G10R10UintPack32 = 68,
		A2B10G10R10SintPack32 = 69,
		R16Unorm = 70,
		R16Snorm = 71,
		R16Uscaled = 72,
		R16Sscaled = 73,
		R16Uint = 74,
		R16Sint = 75,
		R16Sfloat = 76,
		R16G16Unorm = 77,
		R16G16Snorm = 78,
		R16G16Uscaled = 79,
		R16G16Sscaled = 80,
		R16G16Uint = 81,
		R16G16Sint = 82,
		R16G16Sfloat = 83,
		R16G16B16Unorm = 84,
		R16G16B16Snorm = 85,
		R16G16B16Uscaled = 86,
		R16G16B16Sscaled = 87,
		R16G16B16Uint = 88,
		R16G16B16Sint = 89,
		R16G16B16Sfloat = 90,
		R16G16B16A16Unorm = 91,
		R16G16B16A16Snorm = 92,
		R16G16B16A16Uscaled = 93,
		R16G16B16A16Sscaled = 94,
		R16G16B16A16Uint = 95,
		R16G16B16A16Sint = 96,
		R16G16B16A16Sfloat = 97,
		R32Uint = 98,
		R32Sint = 99,
		R32Sfloat = 100,
		R32G32Uint = 101,
		R32G32Sint = 102,
		R32G32Sfloat = 103,
		R32G32B32Uint = 104,
		R32G32B32Sint = 105,
		R32G32B32Sfloat = 106,
		R32G32B32A32Uint = 107,
		R32G32B32A32Sint = 108,
		R32G32B32A32Sfloat = 109,
		R64Uint = 110,
		R64Sint = 111,
		R64Sfloat = 112,
		R64G64Uint = 113,
		R64G64Sint = 114,
		R64G64Sfloat = 115,
		R64G64B64Uint = 116,
		R64G64B64Sint = 117,
		R64G64B64Sfloat = 118,
		R64G64B64A64Uint = 119,
		R64G64B64A64Sint = 120,
		R64G64B64A64Sfloat = 121,
		B10G11R11UfloatPack32 = 122,
		E5B9G9R9UfloatPack32 = 123,
		D16Unorm = 124,
		X8D24UnormPack32 = 125,
		D32Sfloat = 126,
		S8Uint = 127,
		D16UnormS8Uint = 128,
		D24UnormS8Uint = 129,
		D32SfloatS8Uint = 130,
		Bc1RgbUnormBlock = 131,
		Bc1RgbSrgbBlock = 132,
		Bc1RgbaUnormBlock = 133,
		Bc1RgbaSrgbBlock = 134,
		Bc2UnormBlock = 135,
		Bc2SrgbBlock = 136,
		Bc3UnormBlock = 137,
		Bc3SrgbBlock = 138,
		Bc4UnormBlock = 139,
		Bc4SnormBlock = 140,
		Bc5UnormBlock = 141,
		Bc5SnormBlock = 142,
		Bc6HUfloatBlock = 143,
		Bc6HSfloatBlock = 144,
		Bc7UnormBlock = 145,
		Bc7SrgbBlock = 146,
		Etc2R8G8B8UnormBlock = 147,
		Etc2R8G8B8SrgbBlock = 148,
		Etc2R8G8B8A1UnormBlock = 149,
		Etc2R8G8B8A1SrgbBlock = 150,
		Etc2R8G8B8A8UnormBlock = 151,
		Etc2R8G8B8A8SrgbBlock = 152,
		EacR11UnormBlock = 153,
		EacR11SnormBlock = 154,
		EacR11G11UnormBlock = 155,
		EacR11G11SnormBlock = 156,
		Astc4X4UnormBlock = 157,
		Astc4X4SrgbBlock = 158,
		Astc5X4UnormBlock = 159,
		Astc5X4SrgbBlock = 160,
		Astc5X5UnormBlock = 161,
		Astc5X5SrgbBlock = 162,
		Astc6X5UnormBlock = 163,
		Astc6X5SrgbBlock = 164,
		Astc6X6UnormBlock = 165,
		Astc6X6SrgbBlock = 166,
		Astc8X5UnormBlock = 167,
		Astc8X5SrgbBlock = 168,
		Astc8X6UnormBlock = 169,
		Astc8X6SrgbBlock = 170,
		Astc8X8UnormBlock = 171,
		Astc8X8SrgbBlock = 172,
		Astc10X5UnormBlock = 173,
		Astc10X5SrgbBlock = 174,
		Astc10X6UnormBlock = 175,
		Astc10X6SrgbBlock = 176,
		Astc10X8UnormBlock = 177,
		Astc10X8SrgbBlock = 178,
		Astc10X10UnormBlock = 179,
		Astc10X10SrgbBlock = 180,
		Astc12X10UnormBlock = 181,
		Astc12X10SrgbBlock = 182,
		Astc12X12UnormBlock = 183,
		Astc12X12SrgbBlock = 184,
		Pvrtc12BppUnormBlockImg = 1000054000,
		Pvrtc14BppUnormBlockImg = 1000054001,
		Pvrtc22BppUnormBlockImg = 1000054002,
		Pvrtc24BppUnormBlockImg = 1000054003,
		Pvrtc12BppSrgbBlockImg = 1000054004,
		Pvrtc14BppSrgbBlockImg = 1000054005,
		Pvrtc22BppSrgbBlockImg = 1000054006,
		Pvrtc24BppSrgbBlockImg = 1000054007,
		G8B8G8R8422UnormKhr = G8B8G8R8422Unorm,
		B8G8R8G8422UnormKhr = B8G8R8G8422Unorm,
		G8B8R83Plane420UnormKhr = G8B8R83Plane420Unorm,
		G8B8R82Plane420UnormKhr = G8B8R82Plane420Unorm,
		G8B8R83Plane422UnormKhr = G8B8R83Plane422Unorm,
		G8B8R82Plane422UnormKhr = G8B8R82Plane422Unorm,
		G8B8R83Plane444UnormKhr = G8B8R83Plane444Unorm,
		R10X6UnormPack16Khr = R10X6UnormPack16,
		R10X6G10X6Unorm2Pack16Khr = R10X6G10X6Unorm2Pack16,
		R10X6G10X6B10X6A10X6Unorm4Pack16Khr = R10X6G10X6B10X6A10X6Unorm4Pack16,
		G10X6B10X6G10X6R10X6422Unorm4Pack16Khr = G10X6B10X6G10X6R10X6422Unorm4Pack16,
		B10X6G10X6R10X6G10X6422Unorm4Pack16Khr = B10X6G10X6R10X6G10X6422Unorm4Pack16,
		G10X6B10X6R10X63Plane420Unorm3Pack16Khr = G10X6B10X6R10X63Plane420Unorm3Pack16,
		G10X6B10X6R10X62Plane420Unorm3Pack16Khr = G10X6B10X6R10X62Plane420Unorm3Pack16,
		G10X6B10X6R10X63Plane422Unorm3Pack16Khr = G10X6B10X6R10X63Plane422Unorm3Pack16,
		G10X6B10X6R10X62Plane422Unorm3Pack16Khr = G10X6B10X6R10X62Plane422Unorm3Pack16,
		G10X6B10X6R10X63Plane444Unorm3Pack16Khr = G10X6B10X6R10X63Plane444Unorm3Pack16,
		R12X4UnormPack16Khr = R12X4UnormPack16,
		R12X4G12X4Unorm2Pack16Khr = R12X4G12X4Unorm2Pack16,
		R12X4G12X4B12X4A12X4Unorm4Pack16Khr = R12X4G12X4B12X4A12X4Unorm4Pack16,
		G12X4B12X4G12X4R12X4422Unorm4Pack16Khr = G12X4B12X4G12X4R12X4422Unorm4Pack16,
		B12X4G12X4R12X4G12X4422Unorm4Pack16Khr = B12X4G12X4R12X4G12X4422Unorm4Pack16,
		G12X4B12X4R12X43Plane420Unorm3Pack16Khr = G12X4B12X4R12X43Plane420Unorm3Pack16,
		G12X4B12X4R12X42Plane420Unorm3Pack16Khr = G12X4B12X4R12X42Plane420Unorm3Pack16,
		G12X4B12X4R12X43Plane422Unorm3Pack16Khr = G12X4B12X4R12X43Plane422Unorm3Pack16,
		G12X4B12X4R12X42Plane422Unorm3Pack16Khr = G12X4B12X4R12X42Plane422Unorm3Pack16,
		G12X4B12X4R12X43Plane444Unorm3Pack16Khr = G12X4B12X4R12X43Plane444Unorm3Pack16,
		G16B16G16R16422UnormKhr = G16B16G16R16422Unorm,
		B16G16R16G16422UnormKhr = B16G16R16G16422Unorm,
		G16B16R163Plane420UnormKhr = G16B16R163Plane420Unorm,
		G16B16R162Plane420UnormKhr = G16B16R162Plane420Unorm,
		G16B16R163Plane422UnormKhr = G16B16R163Plane422Unorm,
		G16B16R162Plane422UnormKhr = G16B16R162Plane422Unorm,
		G16B16R163Plane444UnormKhr = G16B16R163Plane444Unorm,
		G8B8G8R8422Unorm = 1000156000,
		B8G8R8G8422Unorm = 1000156001,
		G8B8R83Plane420Unorm = 1000156002,
		G8B8R82Plane420Unorm = 1000156003,
		G8B8R83Plane422Unorm = 1000156004,
		G8B8R82Plane422Unorm = 1000156005,
		G8B8R83Plane444Unorm = 1000156006,
		R10X6UnormPack16 = 1000156007,
		R10X6G10X6Unorm2Pack16 = 1000156008,
		R10X6G10X6B10X6A10X6Unorm4Pack16 = 1000156009,
		G10X6B10X6G10X6R10X6422Unorm4Pack16 = 1000156010,
		B10X6G10X6R10X6G10X6422Unorm4Pack16 = 1000156011,
		G10X6B10X6R10X63Plane420Unorm3Pack16 = 1000156012,
		G10X6B10X6R10X62Plane420Unorm3Pack16 = 1000156013,
		G10X6B10X6R10X63Plane422Unorm3Pack16 = 1000156014,
		G10X6B10X6R10X62Plane422Unorm3Pack16 = 1000156015,
		G10X6B10X6R10X63Plane444Unorm3Pack16 = 1000156016,
		R12X4UnormPack16 = 1000156017,
		R12X4G12X4Unorm2Pack16 = 1000156018,
		R12X4G12X4B12X4A12X4Unorm4Pack16 = 1000156019,
		G12X4B12X4G12X4R12X4422Unorm4Pack16 = 1000156020,
		B12X4G12X4R12X4G12X4422Unorm4Pack16 = 1000156021,
		G12X4B12X4R12X43Plane420Unorm3Pack16 = 1000156022,
		G12X4B12X4R12X42Plane420Unorm3Pack16 = 1000156023,
		G12X4B12X4R12X43Plane422Unorm3Pack16 = 1000156024,
		G12X4B12X4R12X42Plane422Unorm3Pack16 = 1000156025,
		G12X4B12X4R12X43Plane444Unorm3Pack16 = 1000156026,
		G16B16G16R16422Unorm = 1000156027,
		B16G16R16G16422Unorm = 1000156028,
		G16B16R163Plane420Unorm = 1000156029,
		G16B16R162Plane420Unorm = 1000156030,
		G16B16R163Plane422Unorm = 1000156031,
		G16B16R162Plane422Unorm = 1000156032,
		G16B16R163Plane444Unorm = 1000156033,
	}

	[Flags]
	public enum FormatFeatureFlags : int
	{
		SampledImage = 0x1,
		StorageImage = 0x2,
		StorageImageAtomic = 0x4,
		UniformTexelBuffer = 0x8,
		StorageTexelBuffer = 0x10,
		StorageTexelBufferAtomic = 0x20,
		VertexBuffer = 0x40,
		ColorAttachment = 0x80,
		ColorAttachmentBlend = 0x100,
		DepthStencilAttachment = 0x200,
		BlitSrc = 0x400,
		BlitDst = 0x800,
		SampledImageFilterLinear = 0x1000,
		SampledImageFilterCubicImg = 0x2000,
		TransferSrcKhr = TransferSrc,
		TransferDstKhr = TransferDst,
		SampledImageFilterMinmaxExt = 0x10000,
		MidpointChromaSamplesKhr = MidpointChromaSamples,
		SampledImageYcbcrConversionLinearFilterKhr = SampledImageYcbcrConversionLinearFilter,
		SampledImageYcbcrConversionSeparateReconstructionFilterKhr = SampledImageYcbcrConversionSeparateReconstructionFilter,
		SampledImageYcbcrConversionChromaReconstructionExplicitKhr = SampledImageYcbcrConversionChromaReconstructionExplicit,
		SampledImageYcbcrConversionChromaReconstructionExplicitForceableKhr = SampledImageYcbcrConversionChromaReconstructionExplicitForceable,
		DisjointKhr = Disjoint,
		CositedChromaSamplesKhr = CositedChromaSamples,
		SampledImageFilterCubicExt = SampledImageFilterCubicImg,
		FragmentDensityMapExt = 0x1000000,
		TransferSrc = 0x4000,
		TransferDst = 0x8000,
		MidpointChromaSamples = 0x20000,
		SampledImageYcbcrConversionLinearFilter = 0x40000,
		SampledImageYcbcrConversionSeparateReconstructionFilter = 0x80000,
		SampledImageYcbcrConversionChromaReconstructionExplicit = 0x100000,
		SampledImageYcbcrConversionChromaReconstructionExplicitForceable = 0x200000,
		Disjoint = 0x400000,
		CositedChromaSamples = 0x800000,
	}

	public enum FrontFace : int
	{
		CounterClockwise = 0,
		Clockwise = 1,
	}

	[Flags]
	public enum ImageAspectFlags : int
	{
		Color = 0x1,
		Depth = 0x2,
		Stencil = 0x4,
		Metadata = 0x8,
		Plane0Khr = Plane0,
		Plane1Khr = Plane1,
		Plane2Khr = Plane2,
		MemoryPlane0Ext = 0x80,
		MemoryPlane1Ext = 0x100,
		MemoryPlane2Ext = 0x200,
		MemoryPlane3Ext = 0x400,
		Plane0 = 0x10,
		Plane1 = 0x20,
		Plane2 = 0x40,
	}

	[Flags]
	public enum ImageCreateFlags : int
	{
		SparseBinding = 0x1,
		SparseResidency = 0x2,
		SparseAliased = 0x4,
		MutableFormat = 0x8,
		CubeCompatible = 0x10,
		CornerSampledNv = 0x2000,
		SplitInstanceBindRegionsKhr = SplitInstanceBindRegions,
		Create2DArrayCompatibleKhr = Create2DArrayCompatible,
		BlockTexelViewCompatibleKhr = BlockTexelViewCompatible,
		ExtendedUsageKhr = ExtendedUsage,
		SampleLocationsCompatibleDepthExt = 0x1000,
		DisjointKhr = Disjoint,
		AliasKhr = Alias,
		SubsampledExt = 0x4000,
		Alias = 0x400,
		SplitInstanceBindRegions = 0x40,
		Create2DArrayCompatible = 0x20,
		BlockTexelViewCompatible = 0x80,
		ExtendedUsage = 0x100,
		Protected = 0x800,
		Disjoint = 0x200,
	}

	public enum ImageLayout : int
	{
		Undefined = 0,
		General = 1,
		ColorAttachmentOptimal = 2,
		DepthStencilAttachmentOptimal = 3,
		DepthStencilReadOnlyOptimal = 4,
		ShaderReadOnlyOptimal = 5,
		TransferSrcOptimal = 6,
		TransferDstOptimal = 7,
		Preinitialized = 8,
		PresentSrcKhr = 1000001002,
		SharedPresentKhr = 1000111000,
		DepthReadOnlyStencilAttachmentOptimalKhr = DepthReadOnlyStencilAttachmentOptimal,
		DepthAttachmentStencilReadOnlyOptimalKhr = DepthAttachmentStencilReadOnlyOptimal,
		ShadingRateOptimalNv = 1000164003,
		FragmentDensityMapOptimalExt = 1000218000,
		DepthReadOnlyStencilAttachmentOptimal = 1000117000,
		DepthAttachmentStencilReadOnlyOptimal = 1000117001,
	}

	public enum ImageTiling : int
	{
		Optimal = 0,
		Linear = 1,
		DrmFormatModifierExt = 1000158000,
	}

	public enum ImageType : int
	{
		Image1D = 0,
		Image2D = 1,
		Image3D = 2,
	}

	[Flags]
	public enum ImageUsageFlags : int
	{
		TransferSrc = 0x1,
		TransferDst = 0x2,
		Sampled = 0x4,
		Storage = 0x8,
		ColorAttachment = 0x10,
		DepthStencilAttachment = 0x20,
		TransientAttachment = 0x40,
		InputAttachment = 0x80,
		ShadingRateImageNv = 0x100,
		FragmentDensityMapExt = 0x200,
	}

	[Flags]
	public enum ImageViewCreateFlags : int
	{
		FragmentDensityMapDynamicExt = 0x1,
	}

	public enum ImageViewType : int
	{
		View1D = 0,
		View2D = 1,
		View3D = 2,
		Cube = 3,
		View1DArray = 4,
		View2DArray = 5,
		CubeArray = 6,
	}

	public enum SharingMode : int
	{
		Exclusive = 0,
		Concurrent = 1,
	}

	public enum IndexType : int
	{
		Uint16 = 0,
		Uint32 = 1,
		NoneNv = 1000165000,
	}

	public enum LogicOp : int
	{
		Clear = 0,
		And = 1,
		AndReverse = 2,
		Copy = 3,
		AndInverted = 4,
		NoOp = 5,
		Xor = 6,
		Or = 7,
		Nor = 8,
		Equivalent = 9,
		Invert = 10,
		OrReverse = 11,
		CopyInverted = 12,
		OrInverted = 13,
		Nand = 14,
		Set = 15,
	}

	[Flags]
	public enum MemoryHeapFlags : int
	{
		DeviceLocal = 0x1,
		MultiInstanceKhr = MultiInstance,
		MultiInstance = 0x2,
	}

	[Flags]
	public enum AccessFlags : int
	{
		IndirectCommandRead = 0x1,
		IndexRead = 0x2,
		VertexAttributeRead = 0x4,
		UniformRead = 0x8,
		InputAttachmentRead = 0x10,
		ShaderRead = 0x20,
		ShaderWrite = 0x40,
		ColorAttachmentRead = 0x80,
		ColorAttachmentWrite = 0x100,
		DepthStencilAttachmentRead = 0x200,
		DepthStencilAttachmentWrite = 0x400,
		TransferRead = 0x800,
		TransferWrite = 0x1000,
		HostRead = 0x2000,
		HostWrite = 0x4000,
		MemoryRead = 0x8000,
		MemoryWrite = 0x10000,
		TransformFeedbackWriteExt = 0x2000000,
		TransformFeedbackCounterReadExt = 0x4000000,
		TransformFeedbackCounterWriteExt = 0x8000000,
		ConditionalRenderingReadExt = 0x100000,
		CommandProcessReadNvx = 0x20000,
		CommandProcessWriteNvx = 0x40000,
		ColorAttachmentReadNoncoherentExt = 0x80000,
		ShadingRateImageReadNv = 0x800000,
		AccelerationStructureReadNv = 0x200000,
		AccelerationStructureWriteNv = 0x400000,
		FragmentDensityMapReadExt = 0x1000000,
	}

	[Flags]
	public enum MemoryPropertyFlags : int
	{
		DeviceLocal = 0x1,
		HostVisible = 0x2,
		HostCoherent = 0x4,
		HostCached = 0x8,
		LazilyAllocated = 0x10,
		Protected = 0x20,
	}

	public enum PhysicalDeviceType : int
	{
		Other = 0,
		IntegratedGpu = 1,
		DiscreteGpu = 2,
		VirtualGpu = 3,
		Cpu = 4,
	}

	public enum PipelineBindPoint : int
	{
		Graphics = 0,
		Compute = 1,
		RayTracingNv = 1000165000,
	}

	[Flags]
	public enum PipelineCreateFlags : int
	{
		DisableOptimization = 0x1,
		AllowDerivatives = 0x2,
		Derivative = 0x4,
		ViewIndexFromDeviceIndexKhr = ViewIndexFromDeviceIndex,
		DispatchBaseKhr = DispatchBase,
		DeferCompileNv = 0x20,
		ViewIndexFromDeviceIndex = 0x8,
		DispatchBase = 0x10,
	}

	public enum PrimitiveTopology : int
	{
		PointList = 0,
		LineList = 1,
		LineStrip = 2,
		TriangleList = 3,
		TriangleStrip = 4,
		TriangleFan = 5,
		LineListWithAdjacency = 6,
		LineStripWithAdjacency = 7,
		TriangleListWithAdjacency = 8,
		TriangleStripWithAdjacency = 9,
		PatchList = 10,
	}

	[Flags]
	public enum QueryControlFlags : int
	{
		Precise = 0x1,
	}

	[Flags]
	public enum QueryPipelineStatisticFlags : int
	{
		InputAssemblyVertices = 0x1,
		InputAssemblyPrimitives = 0x2,
		VertexShaderInvocations = 0x4,
		GeometryShaderInvocations = 0x8,
		GeometryShaderPrimitives = 0x10,
		ClippingInvocations = 0x20,
		ClippingPrimitives = 0x40,
		FragmentShaderInvocations = 0x80,
		TessellationControlShaderPatches = 0x100,
		TessellationEvaluationShaderInvocations = 0x200,
		ComputeShaderInvocations = 0x400,
	}

	[Flags]
	public enum QueryResultFlags : int
	{
		Result64 = 0x1,
		Wait = 0x2,
		WithAvailability = 0x4,
		Partial = 0x8,
	}

	public enum QueryType : int
	{
		Occlusion = 0,
		PipelineStatistics = 1,
		Timestamp = 2,
		TransformFeedbackStreamExt = 1000028004,
		AccelerationStructureCompactedSizeNv = 1000165000,
		PerformanceQueryIntel = 1000210000,
	}

	[Flags]
	public enum QueueFlags : int
	{
		Graphics = 0x1,
		Compute = 0x2,
		Transfer = 0x4,
		SparseBinding = 0x8,
		Protected = 0x10,
	}

	public enum SubpassContents : int
	{
		Inline = 0,
		SecondaryCommandBuffers = 1,
	}

	public enum Result : int
	{
		Success = 0,
		NotReady = 1,
		Timeout = 2,
		EventSet = 3,
		EventReset = 4,
		Incomplete = 5,
		ErrorOutOfHostMemory = -1,
		ErrorOutOfDeviceMemory = -2,
		ErrorInitializationFailed = -3,
		ErrorDeviceLost = -4,
		ErrorMemoryMapFailed = -5,
		ErrorLayerNotPresent = -6,
		ErrorExtensionNotPresent = -7,
		ErrorFeatureNotPresent = -8,
		ErrorIncompatibleDriver = -9,
		ErrorTooManyObjects = -10,
		ErrorFormatNotSupported = -11,
		ErrorFragmentedPool = -12,
		ErrorSurfaceLostKhr = -1000000000,
		ErrorNativeWindowInUseKhr = -1000000001,
		SuboptimalKhr = 1000001003,
		ErrorOutOfDateKhr = -1000001004,
		ErrorIncompatibleDisplayKhr = -1000003001,
		ErrorValidationFailedExt = -1000011001,
		ErrorInvalidShaderNv = -1000012000,
		ErrorOutOfPoolMemoryKhr = ErrorOutOfPoolMemory,
		ErrorInvalidExternalHandleKhr = ErrorInvalidExternalHandle,
		ErrorInvalidDrmFormatModifierPlaneLayoutExt = -1000158000,
		ErrorFragmentationExt = -1000161000,
		ErrorNotPermittedExt = -1000174001,
		ErrorInvalidDeviceAddressExt = -1000244000,
		ErrorFullScreenExclusiveModeLostExt = -1000255000,
		ErrorOutOfPoolMemory = -1000069000,
		ErrorInvalidExternalHandle = -1000072003,
	}

	[Flags]
	public enum ShaderStageFlags : int
	{
		Vertex = 0x1,
		TessellationControl = 0x2,
		TessellationEvaluation = 0x4,
		Geometry = 0x8,
		Fragment = 0x10,
		Compute = 0x20,
		AllGraphics = 0x0000001F,
		All = 0x7FFFFFFF,
		RaygenNv = 0x100,
		AnyHitNv = 0x200,
		ClosestHitNv = 0x400,
		MissNv = 0x800,
		IntersectionNv = 0x1000,
		CallableNv = 0x2000,
		TaskNv = 0x40,
		MeshNv = 0x80,
	}

	[Flags]
	public enum SparseMemoryBindFlags : int
	{
		Metadata = 0x1,
	}

	[Flags]
	public enum StencilFaceFlags : int
	{
		Front = 0x1,
		Back = 0x2,
		StencilFrontAndBack = 0x00000003,
	}

	public enum StencilOp : int
	{
		Keep = 0,
		Zero = 1,
		Replace = 2,
		IncrementAndClamp = 3,
		DecrementAndClamp = 4,
		Invert = 5,
		IncrementAndWrap = 6,
		DecrementAndWrap = 7,
	}

	public enum StructureType : int
	{
		ApplicationInfo = 0,
		InstanceCreateInfo = 1,
		DeviceQueueCreateInfo = 2,
		DeviceCreateInfo = 3,
		SubmitInfo = 4,
		MemoryAllocateInfo = 5,
		MappedMemoryRange = 6,
		BindSparseInfo = 7,
		FenceCreateInfo = 8,
		SemaphoreCreateInfo = 9,
		EventCreateInfo = 10,
		QueryPoolCreateInfo = 11,
		BufferCreateInfo = 12,
		BufferViewCreateInfo = 13,
		ImageCreateInfo = 14,
		ImageViewCreateInfo = 15,
		ShaderModuleCreateInfo = 16,
		PipelineCacheCreateInfo = 17,
		PipelineShaderStageCreateInfo = 18,
		PipelineVertexInputStateCreateInfo = 19,
		PipelineInputAssemblyStateCreateInfo = 20,
		PipelineTessellationStateCreateInfo = 21,
		PipelineViewportStateCreateInfo = 22,
		PipelineRasterizationStateCreateInfo = 23,
		PipelineMultisampleStateCreateInfo = 24,
		PipelineDepthStencilStateCreateInfo = 25,
		PipelineColorBlendStateCreateInfo = 26,
		PipelineDynamicStateCreateInfo = 27,
		GraphicsPipelineCreateInfo = 28,
		ComputePipelineCreateInfo = 29,
		PipelineLayoutCreateInfo = 30,
		SamplerCreateInfo = 31,
		DescriptorSetLayoutCreateInfo = 32,
		DescriptorPoolCreateInfo = 33,
		DescriptorSetAllocateInfo = 34,
		WriteDescriptorSet = 35,
		CopyDescriptorSet = 36,
		FramebufferCreateInfo = 37,
		RenderPassCreateInfo = 38,
		CommandPoolCreateInfo = 39,
		CommandBufferAllocateInfo = 40,
		CommandBufferInheritanceInfo = 41,
		CommandBufferBeginInfo = 42,
		RenderPassBeginInfo = 43,
		BufferMemoryBarrier = 44,
		ImageMemoryBarrier = 45,
		MemoryBarrier = 46,
		LoaderInstanceCreateInfo = 47,
		LoaderDeviceCreateInfo = 48,
		SwapchainCreateInfoKhr = 1000001000,
		PresentInfoKhr = 1000001001,
		DeviceGroupPresentCapabilitiesKhr = 1000060007,
		ImageSwapchainCreateInfoKhr = 1000060008,
		BindImageMemorySwapchainInfoKhr = 1000060009,
		AcquireNextImageInfoKhr = 1000060010,
		DeviceGroupPresentInfoKhr = 1000060011,
		DeviceGroupSwapchainCreateInfoKhr = 1000060012,
		DisplayModeCreateInfoKhr = 1000002000,
		DisplaySurfaceCreateInfoKhr = 1000002001,
		DisplayPresentInfoKhr = 1000003000,
		XlibSurfaceCreateInfoKhr = 1000004000,
		XcbSurfaceCreateInfoKhr = 1000005000,
		WaylandSurfaceCreateInfoKhr = 1000006000,
		AndroidSurfaceCreateInfoKhr = 1000008000,
		Win32SurfaceCreateInfoKhr = 1000009000,
		DebugReportCallbackCreateInfoExt = 1000011000,
		DebugReportCreateInfoExt = DebugReportCallbackCreateInfoExt,
		PipelineRasterizationStateRasterizationOrderAmd = 1000018000,
		DebugMarkerObjectNameInfoExt = 1000022000,
		DebugMarkerObjectTagInfoExt = 1000022001,
		DebugMarkerMarkerInfoExt = 1000022002,
		DedicatedAllocationImageCreateInfoNv = 1000026000,
		DedicatedAllocationBufferCreateInfoNv = 1000026001,
		DedicatedAllocationMemoryAllocateInfoNv = 1000026002,
		PhysicalDeviceTransformFeedbackFeaturesExt = 1000028000,
		PhysicalDeviceTransformFeedbackPropertiesExt = 1000028001,
		PipelineRasterizationStateStreamCreateInfoExt = 1000028002,
		ImageViewHandleInfoNvx = 1000030000,
		TextureLODGatherFormatPropertiesAmd = 1000041000,
		StreamDescriptorSurfaceCreateInfoGGP = 1000049000,
		PhysicalDeviceCornerSampledImageFeaturesNv = 1000050000,
		RenderPassMultiviewCreateInfoKhr = RenderPassMultiviewCreateInfo,
		PhysicalDeviceMultiviewFeaturesKhr = PhysicalDeviceMultiviewFeatures,
		PhysicalDeviceMultiviewPropertiesKhr = PhysicalDeviceMultiviewProperties,
		ExternalMemoryImageCreateInfoNv = 1000056000,
		ExportMemoryAllocateInfoNv = 1000056001,
		ImportMemoryWin32HandleInfoNv = 1000057000,
		ExportMemoryWin32HandleInfoNv = 1000057001,
		Win32KeyedMutexAcquireReleaseInfoNv = 1000058000,
		PhysicalDeviceFeatures2Khr = PhysicalDeviceFeatures2,
		PhysicalDeviceProperties2Khr = PhysicalDeviceProperties2,
		FormatProperties2Khr = FormatProperties2,
		ImageFormatProperties2Khr = ImageFormatProperties2,
		PhysicalDeviceImageFormatInfo2Khr = PhysicalDeviceImageFormatInfo2,
		QueueFamilyProperties2Khr = QueueFamilyProperties2,
		PhysicalDeviceMemoryProperties2Khr = PhysicalDeviceMemoryProperties2,
		SparseImageFormatProperties2Khr = SparseImageFormatProperties2,
		PhysicalDeviceSparseImageFormatInfo2Khr = PhysicalDeviceSparseImageFormatInfo2,
		MemoryAllocateFlagsInfoKhr = MemoryAllocateFlagsInfo,
		DeviceGroupRenderPassBeginInfoKhr = DeviceGroupRenderPassBeginInfo,
		DeviceGroupCommandBufferBeginInfoKhr = DeviceGroupCommandBufferBeginInfo,
		DeviceGroupSubmitInfoKhr = DeviceGroupSubmitInfo,
		DeviceGroupBindSparseInfoKhr = DeviceGroupBindSparseInfo,
		BindBufferMemoryDeviceGroupInfoKhr = BindBufferMemoryDeviceGroupInfo,
		BindImageMemoryDeviceGroupInfoKhr = BindImageMemoryDeviceGroupInfo,
		ValidationFlagsExt = 1000061000,
		ViSurfaceCreateInfoNn = 1000062000,
		ImageViewAstcDecodeModeExt = 1000067000,
		PhysicalDeviceAstcDecodeFeaturesExt = 1000067001,
		PhysicalDeviceGroupPropertiesKhr = PhysicalDeviceGroupProperties,
		DeviceGroupDeviceCreateInfoKhr = DeviceGroupDeviceCreateInfo,
		PhysicalDeviceExternalImageFormatInfoKhr = PhysicalDeviceExternalImageFormatInfo,
		ExternalImageFormatPropertiesKhr = ExternalImageFormatProperties,
		PhysicalDeviceExternalBufferInfoKhr = PhysicalDeviceExternalBufferInfo,
		ExternalBufferPropertiesKhr = ExternalBufferProperties,
		PhysicalDeviceIDPropertiesKhr = PhysicalDeviceIDProperties,
		ExternalMemoryBufferCreateInfoKhr = ExternalMemoryBufferCreateInfo,
		ExternalMemoryImageCreateInfoKhr = ExternalMemoryImageCreateInfo,
		ExportMemoryAllocateInfoKhr = ExportMemoryAllocateInfo,
		ImportMemoryWin32HandleInfoKhr = 1000073000,
		ExportMemoryWin32HandleInfoKhr = 1000073001,
		MemoryWin32HandlePropertiesKhr = 1000073002,
		MemoryGetWin32HandleInfoKhr = 1000073003,
		ImportMemoryFdInfoKhr = 1000074000,
		MemoryFdPropertiesKhr = 1000074001,
		MemoryGetFdInfoKhr = 1000074002,
		Win32KeyedMutexAcquireReleaseInfoKhr = 1000075000,
		PhysicalDeviceExternalSemaphoreInfoKhr = PhysicalDeviceExternalSemaphoreInfo,
		ExternalSemaphorePropertiesKhr = ExternalSemaphoreProperties,
		ExportSemaphoreCreateInfoKhr = ExportSemaphoreCreateInfo,
		ImportSemaphoreWin32HandleInfoKhr = 1000078000,
		ExportSemaphoreWin32HandleInfoKhr = 1000078001,
		D3D12FenceSubmitInfoKhr = 1000078002,
		SemaphoreGetWin32HandleInfoKhr = 1000078003,
		ImportSemaphoreFdInfoKhr = 1000079000,
		SemaphoreGetFdInfoKhr = 1000079001,
		PhysicalDevicePushDescriptorPropertiesKhr = 1000080000,
		CommandBufferInheritanceConditionalRenderingInfoExt = 1000081000,
		PhysicalDeviceConditionalRenderingFeaturesExt = 1000081001,
		ConditionalRenderingBeginInfoExt = 1000081002,
		PhysicalDeviceFloat16Int8FeaturesKhr = 1000082000,
		PhysicalDevice16BitStorageFeaturesKhr = PhysicalDevice16BitStorageFeatures,
		PresentRegionsKhr = 1000084000,
		DescriptorUpdateTemplateCreateInfoKhr = DescriptorUpdateTemplateCreateInfo,
		ObjectTableCreateInfoNvx = 1000086000,
		IndirectCommandsLayoutCreateInfoNvx = 1000086001,
		CmdProcessCommandsInfoNvx = 1000086002,
		CmdReserveSpaceForCommandsInfoNvx = 1000086003,
		DeviceGeneratedCommandsLimitsNvx = 1000086004,
		DeviceGeneratedCommandsFeaturesNvx = 1000086005,
		PipelineViewportWScalingStateCreateInfoNv = 1000087000,
		SurfaceCapabilities2Ext = 1000090000,
		DisplayPowerInfoExt = 1000091000,
		DeviceEventInfoExt = 1000091001,
		DisplayEventInfoExt = 1000091002,
		SwapchainCounterCreateInfoExt = 1000091003,
		PresentTimesInfoGoogle = 1000092000,
		PhysicalDeviceMultiviewPerViewAttributesPropertiesNvx = 1000097000,
		PipelineViewportSwizzleStateCreateInfoNv = 1000098000,
		PhysicalDeviceDiscardRectanglePropertiesExt = 1000099000,
		PipelineDiscardRectangleStateCreateInfoExt = 1000099001,
		PhysicalDeviceConservativeRasterizationPropertiesExt = 1000101000,
		PipelineRasterizationConservativeStateCreateInfoExt = 1000101001,
		PhysicalDeviceDepthClipEnableFeaturesExt = 1000102000,
		PipelineRasterizationDepthClipStateCreateInfoExt = 1000102001,
		HdrMetadataExt = 1000105000,
		AttachmentDescription2Khr = 1000109000,
		AttachmentReference2Khr = 1000109001,
		SubpassDescription2Khr = 1000109002,
		SubpassDependency2Khr = 1000109003,
		RenderPassCreateInfo2Khr = 1000109004,
		SubpassBeginInfoKhr = 1000109005,
		SubpassEndInfoKhr = 1000109006,
		SharedPresentSurfaceCapabilitiesKhr = 1000111000,
		PhysicalDeviceExternalFenceInfoKhr = PhysicalDeviceExternalFenceInfo,
		ExternalFencePropertiesKhr = ExternalFenceProperties,
		ExportFenceCreateInfoKhr = ExportFenceCreateInfo,
		ImportFenceWin32HandleInfoKhr = 1000114000,
		ExportFenceWin32HandleInfoKhr = 1000114001,
		FenceGetWin32HandleInfoKhr = 1000114002,
		ImportFenceFdInfoKhr = 1000115000,
		FenceGetFdInfoKhr = 1000115001,
		PhysicalDevicePointClippingPropertiesKhr = PhysicalDevicePointClippingProperties,
		RenderPassInputAttachmentAspectCreateInfoKhr = RenderPassInputAttachmentAspectCreateInfo,
		ImageViewUsageCreateInfoKhr = ImageViewUsageCreateInfo,
		PipelineTessellationDomainOriginStateCreateInfoKhr = PipelineTessellationDomainOriginStateCreateInfo,
		PhysicalDeviceSurfaceInfo2Khr = 1000119000,
		SurfaceCapabilities2Khr = 1000119001,
		SurfaceFormat2Khr = 1000119002,
		PhysicalDeviceVariablePointerFeaturesKhr = PhysicalDeviceVariablePointerFeatures,
		PhysicalDeviceVariablePointersFeaturesKhr = PhysicalDeviceVariablePointerFeatures,
		DisplayProperties2Khr = 1000121000,
		DisplayPlaneProperties2Khr = 1000121001,
		DisplayModeProperties2Khr = 1000121002,
		DisplayPlaneInfo2Khr = 1000121003,
		DisplayPlaneCapabilities2Khr = 1000121004,
		IOSSurfaceCreateInfoMvk = 1000122000,
		MacOSSurfaceCreateInfoMvk = 1000123000,
		MemoryDedicatedRequirementsKhr = MemoryDedicatedRequirements,
		MemoryDedicatedAllocateInfoKhr = MemoryDedicatedAllocateInfo,
		DebugUtilsObjectNameInfoExt = 1000128000,
		DebugUtilsObjectTagInfoExt = 1000128001,
		DebugUtilsLabelExt = 1000128002,
		DebugUtilsMessengerCallbackDataExt = 1000128003,
		DebugUtilsMessengerCreateInfoExt = 1000128004,
		AndroidHardwareBufferUsageAndroid = 1000129000,
		AndroidHardwareBufferPropertiesAndroid = 1000129001,
		AndroidHardwareBufferFormatPropertiesAndroid = 1000129002,
		ImportAndroidHardwareBufferInfoAndroid = 1000129003,
		MemoryGetAndroidHardwareBufferInfoAndroid = 1000129004,
		ExternalFormatAndroid = 1000129005,
		PhysicalDeviceSamplerFilterMinmaxPropertiesExt = 1000130000,
		SamplerReductionModeCreateInfoExt = 1000130001,
		PhysicalDeviceInlineUniformBlockFeaturesExt = 1000138000,
		PhysicalDeviceInlineUniformBlockPropertiesExt = 1000138001,
		WriteDescriptorSetInlineUniformBlockExt = 1000138002,
		DescriptorPoolInlineUniformBlockCreateInfoExt = 1000138003,
		SampleLocationsInfoExt = 1000143000,
		RenderPassSampleLocationsBeginInfoExt = 1000143001,
		PipelineSampleLocationsStateCreateInfoExt = 1000143002,
		PhysicalDeviceSampleLocationsPropertiesExt = 1000143003,
		MultisamplePropertiesExt = 1000143004,
		BufferMemoryRequirementsInfo2Khr = BufferMemoryRequirementsInfo2,
		ImageMemoryRequirementsInfo2Khr = ImageMemoryRequirementsInfo2,
		ImageSparseMemoryRequirementsInfo2Khr = ImageSparseMemoryRequirementsInfo2,
		MemoryRequirements2Khr = MemoryRequirements2,
		SparseImageMemoryRequirements2Khr = SparseImageMemoryRequirements2,
		ImageFormatListCreateInfoKhr = 1000147000,
		PhysicalDeviceBlendOperationAdvancedFeaturesExt = 1000148000,
		PhysicalDeviceBlendOperationAdvancedPropertiesExt = 1000148001,
		PipelineColorBlendAdvancedStateCreateInfoExt = 1000148002,
		PipelineCoverageToColorStateCreateInfoNv = 1000149000,
		PipelineCoverageModulationStateCreateInfoNv = 1000152000,
		PhysicalDeviceShaderSMBuiltinsFeaturesNv = 1000154000,
		PhysicalDeviceShaderSMBuiltinsPropertiesNv = 1000154001,
		SamplerYcbcrConversionCreateInfoKhr = SamplerYcbcrConversionCreateInfo,
		SamplerYcbcrConversionInfoKhr = SamplerYcbcrConversionInfo,
		BindImagePlaneMemoryInfoKhr = BindImagePlaneMemoryInfo,
		ImagePlaneMemoryRequirementsInfoKhr = ImagePlaneMemoryRequirementsInfo,
		PhysicalDeviceSamplerYcbcrConversionFeaturesKhr = PhysicalDeviceSamplerYcbcrConversionFeatures,
		SamplerYcbcrConversionImageFormatPropertiesKhr = SamplerYcbcrConversionImageFormatProperties,
		BindBufferMemoryInfoKhr = BindBufferMemoryInfo,
		BindImageMemoryInfoKhr = BindImageMemoryInfo,
		DrmFormatModifierPropertiesListExt = 1000158000,
		DrmFormatModifierPropertiesExt = 1000158001,
		PhysicalDeviceImageDrmFormatModifierInfoExt = 1000158002,
		ImageDrmFormatModifierListCreateInfoExt = 1000158003,
		ImageDrmFormatModifierExplicitCreateInfoExt = 1000158004,
		ImageDrmFormatModifierPropertiesExt = 1000158005,
		ValidationCacheCreateInfoExt = 1000160000,
		ShaderModuleValidationCacheCreateInfoExt = 1000160001,
		DescriptorSetLayoutBindingFlagsCreateInfoExt = 1000161000,
		PhysicalDeviceDescriptorIndexingFeaturesExt = 1000161001,
		PhysicalDeviceDescriptorIndexingPropertiesExt = 1000161002,
		DescriptorSetVariableDescriptorCountAllocateInfoExt = 1000161003,
		DescriptorSetVariableDescriptorCountLayoutSupportExt = 1000161004,
		PipelineViewportShadingRateImageStateCreateInfoNv = 1000164000,
		PhysicalDeviceShadingRateImageFeaturesNv = 1000164001,
		PhysicalDeviceShadingRateImagePropertiesNv = 1000164002,
		PipelineViewportCoarseSampleOrderStateCreateInfoNv = 1000164005,
		RayTracingPipelineCreateInfoNv = 1000165000,
		AccelerationStructureCreateInfoNv = 1000165001,
		GeometryNv = 1000165003,
		GeometryTrianglesNv = 1000165004,
		GeometryAABBNv = 1000165005,
		BindAccelerationStructureMemoryInfoNv = 1000165006,
		WriteDescriptorSetAccelerationStructureNv = 1000165007,
		AccelerationStructureMemoryRequirementsInfoNv = 1000165008,
		PhysicalDeviceRayTracingPropertiesNv = 1000165009,
		RayTracingShaderGroupCreateInfoNv = 1000165011,
		AccelerationStructureInfoNv = 1000165012,
		PhysicalDeviceRepresentativeFragmentTestFeaturesNv = 1000166000,
		PipelineRepresentativeFragmentTestStateCreateInfoNv = 1000166001,
		PhysicalDeviceMaintenance3PropertiesKhr = PhysicalDeviceMaintenance3Properties,
		DescriptorSetLayoutSupportKhr = DescriptorSetLayoutSupport,
		PhysicalDeviceImageViewImageFormatInfoExt = 1000170000,
		FilterCubicImageViewImageFormatPropertiesExt = 1000170001,
		DeviceQueueGlobalPriorityCreateInfoExt = 1000174000,
		PhysicalDevice8BitStorageFeaturesKhr = 1000177000,
		ImportMemoryHostPointerInfoExt = 1000178000,
		MemoryHostPointerPropertiesExt = 1000178001,
		PhysicalDeviceExternalMemoryHostPropertiesExt = 1000178002,
		PhysicalDeviceShaderAtomicInt64FeaturesKhr = 1000180000,
		CalibratedTimestampInfoExt = 1000184000,
		PhysicalDeviceShaderCorePropertiesAmd = 1000185000,
		DeviceMemoryOverallocationCreateInfoAmd = 1000189000,
		PhysicalDeviceVertexAttributeDivisorPropertiesExt = 1000190000,
		PipelineVertexInputDivisorStateCreateInfoExt = 1000190001,
		PhysicalDeviceVertexAttributeDivisorFeaturesExt = 1000190002,
		PresentFrameTokenGGP = 1000191000,
		PipelineCreationFeedbackCreateInfoExt = 1000192000,
		PhysicalDeviceDriverPropertiesKhr = 1000196000,
		PhysicalDeviceFloatControlsPropertiesKhr = 1000197000,
		PhysicalDeviceDepthStencilResolvePropertiesKhr = 1000199000,
		SubpassDescriptionDepthStencilResolveKhr = 1000199001,
		PhysicalDeviceComputeShaderDerivativesFeaturesNv = 1000201000,
		PhysicalDeviceMeshShaderFeaturesNv = 1000202000,
		PhysicalDeviceMeshShaderPropertiesNv = 1000202001,
		PhysicalDeviceFragmentShaderBarycentricFeaturesNv = 1000203000,
		PhysicalDeviceShaderImageFootprintFeaturesNv = 1000204000,
		PipelineViewportExclusiveScissorStateCreateInfoNv = 1000205000,
		PhysicalDeviceExclusiveScissorFeaturesNv = 1000205002,
		CheckpointDataNv = 1000206000,
		QueueFamilyCheckpointPropertiesNv = 1000206001,
		PhysicalDeviceShaderIntegerFunctions2FeaturesIntel = 1000209000,
		QueryPoolCreateInfoIntel = 1000210000,
		InitializePerformanceApiInfoIntel = 1000210001,
		PerformanceMarkerInfoIntel = 1000210002,
		PerformanceStreamMarkerInfoIntel = 1000210003,
		PerformanceOverrideInfoIntel = 1000210004,
		PerformanceConfigurationAcquireInfoIntel = 1000210005,
		PhysicalDeviceVulkanMemoryModelFeaturesKhr = 1000211000,
		PhysicalDevicePCIBusInfoPropertiesExt = 1000212000,
		DisplayNativeHdrSurfaceCapabilitiesAmd = 1000213000,
		SwapchainDisplayNativeHdrCreateInfoAmd = 1000213001,
		ImagepipeSurfaceCreateInfoFuchsia = 1000214000,
		MetalSurfaceCreateInfoExt = 1000217000,
		PhysicalDeviceFragmentDensityMapFeaturesExt = 1000218000,
		PhysicalDeviceFragmentDensityMapPropertiesExt = 1000218001,
		RenderPassFragmentDensityMapCreateInfoExt = 1000218002,
		PhysicalDeviceScalarBlockLayoutFeaturesExt = 1000221000,
		PhysicalDeviceMemoryBudgetPropertiesExt = 1000237000,
		PhysicalDeviceMemoryPriorityFeaturesExt = 1000238000,
		MemoryPriorityAllocateInfoExt = 1000238001,
		SurfaceProtectedCapabilitiesKhr = 1000239000,
		PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNv = 1000240000,
		PhysicalDeviceBufferDeviceAddressFeaturesExt = 1000244000,
		PhysicalDeviceBufferAddressFeaturesExt = PhysicalDeviceBufferDeviceAddressFeaturesExt,
		BufferDeviceAddressInfoExt = 1000244001,
		BufferDeviceAddressCreateInfoExt = 1000244002,
		ImageStencilUsageCreateInfoExt = 1000246000,
		ValidationFeaturesExt = 1000247000,
		PhysicalDeviceCooperativeMatrixFeaturesNv = 1000249000,
		CooperativeMatrixPropertiesNv = 1000249001,
		PhysicalDeviceCooperativeMatrixPropertiesNv = 1000249002,
		PhysicalDeviceCoverageReductionModeFeaturesNv = 1000250000,
		PipelineCoverageReductionStateCreateInfoNv = 1000250001,
		FramebufferMixedSamplesCombinationNv = 1000250002,
		PhysicalDeviceFragmentShaderInterlockFeaturesExt = 1000251000,
		PhysicalDeviceYcbcrImageArraysFeaturesExt = 1000252000,
		PhysicalDeviceUniformBufferStandardLayoutFeaturesKhr = 1000253000,
		SurfaceFullScreenExclusiveInfoExt = 1000255000,
		SurfaceCapabilitiesFullScreenExclusiveExt = 1000255002,
		SurfaceFullScreenExclusiveWin32InfoExt = 1000255001,
		HeadlessSurfaceCreateInfoExt = 1000256000,
		PhysicalDeviceHostQueryResetFeaturesExt = 1000261000,
		PhysicalDeviceSubgroupProperties = 1000094000,
		BindBufferMemoryInfo = 1000157000,
		BindImageMemoryInfo = 1000157001,
		PhysicalDevice16BitStorageFeatures = 1000083000,
		MemoryDedicatedRequirements = 1000127000,
		MemoryDedicatedAllocateInfo = 1000127001,
		MemoryAllocateFlagsInfo = 1000060000,
		DeviceGroupRenderPassBeginInfo = 1000060003,
		DeviceGroupCommandBufferBeginInfo = 1000060004,
		DeviceGroupSubmitInfo = 1000060005,
		DeviceGroupBindSparseInfo = 1000060006,
		BindBufferMemoryDeviceGroupInfo = 1000060013,
		BindImageMemoryDeviceGroupInfo = 1000060014,
		PhysicalDeviceGroupProperties = 1000070000,
		DeviceGroupDeviceCreateInfo = 1000070001,
		BufferMemoryRequirementsInfo2 = 1000146000,
		ImageMemoryRequirementsInfo2 = 1000146001,
		ImageSparseMemoryRequirementsInfo2 = 1000146002,
		MemoryRequirements2 = 1000146003,
		SparseImageMemoryRequirements2 = 1000146004,
		PhysicalDeviceFeatures2 = 1000059000,
		PhysicalDeviceProperties2 = 1000059001,
		FormatProperties2 = 1000059002,
		ImageFormatProperties2 = 1000059003,
		PhysicalDeviceImageFormatInfo2 = 1000059004,
		QueueFamilyProperties2 = 1000059005,
		PhysicalDeviceMemoryProperties2 = 1000059006,
		SparseImageFormatProperties2 = 1000059007,
		PhysicalDeviceSparseImageFormatInfo2 = 1000059008,
		PhysicalDevicePointClippingProperties = 1000117000,
		RenderPassInputAttachmentAspectCreateInfo = 1000117001,
		ImageViewUsageCreateInfo = 1000117002,
		PipelineTessellationDomainOriginStateCreateInfo = 1000117003,
		RenderPassMultiviewCreateInfo = 1000053000,
		PhysicalDeviceMultiviewFeatures = 1000053001,
		PhysicalDeviceMultiviewProperties = 1000053002,
		PhysicalDeviceVariablePointersFeatures = 1000120000,
		PhysicalDeviceVariablePointerFeatures = PhysicalDeviceVariablePointersFeatures,
		ProtectedSubmitInfo = 1000145000,
		PhysicalDeviceProtectedMemoryFeatures = 1000145001,
		PhysicalDeviceProtectedMemoryProperties = 1000145002,
		DeviceQueueInfo2 = 1000145003,
		SamplerYcbcrConversionCreateInfo = 1000156000,
		SamplerYcbcrConversionInfo = 1000156001,
		BindImagePlaneMemoryInfo = 1000156002,
		ImagePlaneMemoryRequirementsInfo = 1000156003,
		PhysicalDeviceSamplerYcbcrConversionFeatures = 1000156004,
		SamplerYcbcrConversionImageFormatProperties = 1000156005,
		DescriptorUpdateTemplateCreateInfo = 1000085000,
		PhysicalDeviceExternalImageFormatInfo = 1000071000,
		ExternalImageFormatProperties = 1000071001,
		PhysicalDeviceExternalBufferInfo = 1000071002,
		ExternalBufferProperties = 1000071003,
		PhysicalDeviceIDProperties = 1000071004,
		ExternalMemoryBufferCreateInfo = 1000072000,
		ExternalMemoryImageCreateInfo = 1000072001,
		ExportMemoryAllocateInfo = 1000072002,
		PhysicalDeviceExternalFenceInfo = 1000112000,
		ExternalFenceProperties = 1000112001,
		ExportFenceCreateInfo = 1000113000,
		ExportSemaphoreCreateInfo = 1000077000,
		PhysicalDeviceExternalSemaphoreInfo = 1000076000,
		ExternalSemaphoreProperties = 1000076001,
		PhysicalDeviceMaintenance3Properties = 1000168000,
		DescriptorSetLayoutSupport = 1000168001,
		PhysicalDeviceShaderDrawParametersFeatures = 1000063000,
		PhysicalDeviceShaderDrawParameterFeatures = PhysicalDeviceShaderDrawParametersFeatures,
	}

	public enum SystemAllocationScope : int
	{
		Command = 0,
		Object = 1,
		Cache = 2,
		Device = 3,
		Instance = 4,
	}

	public enum InternalAllocationType : int
	{
		Executable = 0,
	}

	public enum SamplerAddressMode : int
	{
		Repeat = 0,
		MirroredRepeat = 1,
		ClampToEdge = 2,
		ClampToBorder = 3,
		MirrorClampToEdge = 4,
	}

	public enum Filter : int
	{
		Nearest = 0,
		Linear = 1,
		CubicImg = 1000015000,
		CubicExt = CubicImg,
	}

	public enum SamplerMipmapMode : int
	{
		Nearest = 0,
		Linear = 1,
	}

	public enum VertexInputRate : int
	{
		Vertex = 0,
		Instance = 1,
	}

	[Flags]
	public enum PipelineStageFlags : int
	{
		TopOfPipe = 0x1,
		DrawIndirect = 0x2,
		VertexInput = 0x4,
		VertexShader = 0x8,
		TessellationControlShader = 0x10,
		TessellationEvaluationShader = 0x20,
		GeometryShader = 0x40,
		FragmentShader = 0x80,
		EarlyFragmentTests = 0x100,
		LateFragmentTests = 0x200,
		ColorAttachmentOutput = 0x400,
		ComputeShader = 0x800,
		Transfer = 0x1000,
		BottomOfPipe = 0x2000,
		Host = 0x4000,
		AllGraphics = 0x8000,
		AllCommands = 0x10000,
		TransformFeedbackExt = 0x1000000,
		ConditionalRenderingExt = 0x40000,
		CommandProcessNvx = 0x20000,
		ShadingRateImageNv = 0x400000,
		RayTracingShaderNv = 0x200000,
		AccelerationStructureBuildNv = 0x2000000,
		TaskShaderNv = 0x80000,
		MeshShaderNv = 0x100000,
		FragmentDensityProcessExt = 0x800000,
	}

	[Flags]
	public enum SparseImageFormatFlags : int
	{
		SingleMiptail = 0x1,
		AlignedMipSize = 0x2,
		NonstandardBlockSize = 0x4,
	}

	[Flags]
	public enum SampleCountFlags : int
	{
		Count1 = 0x1,
		Count2 = 0x2,
		Count4 = 0x4,
		Count8 = 0x8,
		Count16 = 0x10,
		Count32 = 0x20,
		Count64 = 0x40,
	}

	[Flags]
	public enum AttachmentDescriptionFlags : int
	{
		MayAlias = 0x1,
	}

	[Flags]
	public enum DescriptorPoolCreateFlags : int
	{
		FreeDescriptorSet = 0x1,
		UpdateAfterBindExt = 0x2,
	}

	[Flags]
	public enum DependencyFlags : int
	{
		ByRegion = 0x1,
		ViewLocalKhr = ViewLocal,
		DeviceGroupKhr = DeviceGroup,
		DeviceGroup = 0x4,
		ViewLocal = 0x2,
	}

	public enum ObjectType : int
	{
		Unknown = 0,
		Instance = 1,
		PhysicalDevice = 2,
		Device = 3,
		Queue = 4,
		Semaphore = 5,
		CommandBuffer = 6,
		Fence = 7,
		DeviceMemory = 8,
		Buffer = 9,
		Image = 10,
		Event = 11,
		QueryPool = 12,
		BufferView = 13,
		ImageView = 14,
		ShaderModule = 15,
		PipelineCache = 16,
		PipelineLayout = 17,
		RenderPass = 18,
		Pipeline = 19,
		DescriptorSetLayout = 20,
		Sampler = 21,
		DescriptorPool = 22,
		DescriptorSet = 23,
		Framebuffer = 24,
		CommandPool = 25,
		SurfaceKhr = 1000000000,
		SwapchainKhr = 1000001000,
		DisplayKhr = 1000002000,
		DisplayModeKhr = 1000002001,
		DebugReportCallbackExt = 1000011000,
		DescriptorUpdateTemplateKhr = DescriptorUpdateTemplate,
		ObjectTableNvx = 1000086000,
		IndirectCommandsLayoutNvx = 1000086001,
		DebugUtilsMessengerExt = 1000128000,
		SamplerYcbcrConversionKhr = SamplerYcbcrConversion,
		ValidationCacheExt = 1000160000,
		AccelerationStructureNv = 1000165000,
		PerformanceConfigurationIntel = 1000210000,
		SamplerYcbcrConversion = 1000156000,
		DescriptorUpdateTemplate = 1000085000,
	}

	[Flags]
	public enum DescriptorBindingFlagsExt : int
	{
		UpdateAfterBind = 0x1,
		UpdateUnusedWhilePending = 0x2,
		PartiallyBound = 0x4,
		VariableDescriptorCount = 0x8,
	}

	[Flags]
	public enum ConditionalRenderingFlagsExt : int
	{
		Inverted = 0x1,
	}

	[Flags]
	public enum IndirectCommandsLayoutUsageFlagsNvx : int
	{
		UnorderedSequences = 0x1,
		SparseSequences = 0x2,
		EmptyExecutions = 0x4,
		IndexedSequences = 0x8,
	}

	public enum IndirectCommandsTokenTypeNvx : int
	{
		Pipeline = 0,
		DescriptorSet = 1,
		IndexBuffer = 2,
		VertexBuffer = 3,
		PushConstant = 4,
		DrawIndexed = 5,
		Draw = 6,
		Dispatch = 7,
	}

	[Flags]
	public enum ObjectEntryUsageFlagsNvx : int
	{
		Graphics = 0x1,
		Compute = 0x2,
	}

	public enum ObjectEntryTypeNvx : int
	{
		DescriptorSet = 0,
		Pipeline = 1,
		IndexBuffer = 2,
		VertexBuffer = 3,
		PushConstant = 4,
	}

	public enum DescriptorUpdateTemplateType : int
	{
		DescriptorSet = 0,
		PushDescriptorsKhr = 1,
		DescriptorSetKhr = DescriptorSet,
	}

	[Obsolete ("DescriptorUpdateTemplateTypeKhr is deprecated, please use DescriptorUpdateTemplateType instead.")]
	public enum DescriptorUpdateTemplateTypeKhr : int
	{
		DescriptorSet = 0,
		PushDescriptorsKhr = 1,
		DescriptorSetKhr = DescriptorSet,
	}

	public enum ViewportCoordinateSwizzleNv : int
	{
		PositiveX = 0,
		NegativeX = 1,
		PositiveY = 2,
		NegativeY = 3,
		PositiveZ = 4,
		NegativeZ = 5,
		PositiveW = 6,
		NegativeW = 7,
	}

	public enum DiscardRectangleModeExt : int
	{
		Inclusive = 0,
		Exclusive = 1,
	}

	[Flags]
	public enum SubpassDescriptionFlags : int
	{
		PerViewAttributesNvx = 0x1,
		PerViewPositionXOnlyNvx = 0x2,
	}

	public enum PointClippingBehavior : int
	{
		AllClipPlanes = 0,
		UserClipPlanesOnly = 1,
		AllClipPlanesKhr = AllClipPlanes,
		UserClipPlanesOnlyKhr = UserClipPlanesOnly,
	}

	[Obsolete ("PointClippingBehaviorKhr is deprecated, please use PointClippingBehavior instead.")]
	public enum PointClippingBehaviorKhr : int
	{
		AllClipPlanes = 0,
		UserClipPlanesOnly = 1,
		AllClipPlanesKhr = AllClipPlanes,
		UserClipPlanesOnlyKhr = UserClipPlanesOnly,
	}

	public enum CoverageModulationModeNv : int
	{
		None = 0,
		Rgb = 1,
		Alpha = 2,
		Rgba = 3,
	}

	public enum CoverageReductionModeNv : int
	{
		Merge = 0,
		Truncate = 1,
	}

	public enum ValidationCacheHeaderVersionExt : int
	{
		One = 1,
	}

	public enum ShaderInfoTypeAmd : int
	{
		Statistics = 0,
		Binary = 1,
		Disassembly = 2,
	}

	public enum QueueGlobalPriorityExt : int
	{
		Low = 128,
		Medium = 256,
		High = 512,
		Realtime = 1024,
	}

	public enum TimeDomainExt : int
	{
		Device = 0,
		ClockMonotonic = 1,
		ClockMonotonicRaw = 2,
		QueryPerformanceCounter = 3,
	}

	public enum ConservativeRasterizationModeExt : int
	{
		Disabled = 0,
		Overestimate = 1,
		Underestimate = 2,
	}

	[Flags]
	public enum ResolveModeFlagsKhr : int
	{
		NoneKhr = 0,
		SampleZero = 0x1,
		Average = 0x2,
		Min = 0x4,
		Max = 0x8,
	}

	[Flags]
	public enum GeometryFlagsNv : int
	{
		Opaque = 0x1,
		NoDuplicateAnyHitInvocation = 0x2,
	}

	[Flags]
	public enum GeometryInstanceFlagsNv : int
	{
		TriangleCullDisable = 0x1,
		TriangleFrontCounterclockwise = 0x2,
		ForceOpaque = 0x4,
		ForceNoOpaque = 0x8,
	}

	[Flags]
	public enum BuildAccelerationStructureFlagsNv : int
	{
		AllowUpdate = 0x1,
		AllowCompaction = 0x2,
		PreferFastTrace = 0x4,
		PreferFastBuild = 0x8,
		LowMemory = 0x10,
	}

	public enum CopyAccelerationStructureModeNv : int
	{
		Clone = 0,
		Compact = 1,
	}

	public enum AccelerationStructureTypeNv : int
	{
		TopLevel = 0,
		BottomLevel = 1,
	}

	public enum GeometryTypeNv : int
	{
		Triangles = 0,
		Aabbs = 1,
	}

	public enum RayTracingShaderGroupTypeNv : int
	{
		General = 0,
		TrianglesHitGroup = 1,
		ProceduralHitGroup = 2,
	}

	public enum AccelerationStructureMemoryRequirementsTypeNv : int
	{
		Object = 0,
		BuildScratch = 1,
		UpdateScratch = 2,
	}

	public enum MemoryOverallocationBehaviorAmd : int
	{
		Default = 0,
		Allowed = 1,
		Disallowed = 2,
	}

	public enum ScopeNv : int
	{
		Device = 1,
		Workgroup = 2,
		Subgroup = 3,
		QueueFamily = 5,
	}

	public enum ComponentTypeNv : int
	{
		Float16 = 0,
		Float32 = 1,
		Float64 = 2,
		Sint8 = 3,
		Sint16 = 4,
		Sint32 = 5,
		Sint64 = 6,
		Uint8 = 7,
		Uint16 = 8,
		Uint32 = 9,
		Uint64 = 10,
	}

	[Flags]
	public enum PipelineCreationFeedbackFlagsExt : int
	{
		Valid = 0x1,
		ApplicationPipelineCacheHit = 0x2,
		BasePipelineAcceleration = 0x4,
	}

	public enum PerformanceConfigurationTypeIntel : int
	{
		CommandQueueMetricsDiscoveryActivated = 0,
	}

	public enum QueryPoolSamplingModeIntel : int
	{
		Manual = 0,
	}

	public enum PerformanceOverrideTypeIntel : int
	{
		NullHardware = 0,
		FlushGpuCaches = 1,
	}

	public enum PerformanceParameterTypeIntel : int
	{
		HwCountersSupported = 0,
		StreamMarkerValidBits = 1,
	}

	public enum PerformanceValueTypeIntel : int
	{
		Uint32 = 0,
		Uint64 = 1,
		Float = 2,
		Bool = 3,
		String = 4,
	}

	public enum ColorSpaceKhr : int
	{
		SrgbNonlinear = 0,
		DisplayP3NonlinearExt = 1000104001,
		ExtendedSrgbLinearExt = 1000104002,
		DisplayP3LinearExt = 1000104003,
		DciP3NonlinearExt = 1000104004,
		Bt709LinearExt = 1000104005,
		Bt709NonlinearExt = 1000104006,
		Bt2020LinearExt = 1000104007,
		Hdr10St2084Ext = 1000104008,
		DolbyvisionExt = 1000104009,
		Hdr10HlgExt = 1000104010,
		AdobergbLinearExt = 1000104011,
		AdobergbNonlinearExt = 1000104012,
		PassThroughExt = 1000104013,
		ExtendedSrgbNonlinearExt = 1000104014,
		DciP3LinearExt = DisplayP3LinearExt,
		DisplayNativeAmd = 1000213000,
	}

	[Flags]
	public enum CompositeAlphaFlagsKhr : int
	{
		Opaque = 0x1,
		PreMultiplied = 0x2,
		PostMultiplied = 0x4,
		Inherit = 0x8,
	}

	[Flags]
	public enum DisplayPlaneAlphaFlagsKhr : int
	{
		Opaque = 0x1,
		Global = 0x2,
		PerPixel = 0x4,
		PerPixelPremultiplied = 0x8,
	}

	public enum PresentModeKhr : int
	{
		Immediate = 0,
		Mailbox = 1,
		Fifo = 2,
		FifoRelaxed = 3,
		SharedDemandRefresh = 1000111000,
		SharedContinuousRefresh = 1000111001,
	}

	[Flags]
	public enum SurfaceTransformFlagsKhr : int
	{
		Identity = 0x1,
		Rotate90 = 0x2,
		Rotate180 = 0x4,
		Rotate270 = 0x8,
		HorizontalMirror = 0x10,
		HorizontalMirrorRotate90 = 0x20,
		HorizontalMirrorRotate180 = 0x40,
		HorizontalMirrorRotate270 = 0x80,
		Inherit = 0x100,
	}

	[Flags]
	public enum DebugReportFlagsExt : int
	{
		Information = 0x1,
		Warning = 0x2,
		PerformanceWarning = 0x4,
		Error = 0x8,
		Debug = 0x10,
	}

	public enum DebugReportObjectTypeExt : int
	{
		Unknown = 0,
		Instance = 1,
		PhysicalDevice = 2,
		Device = 3,
		Queue = 4,
		Semaphore = 5,
		CommandBuffer = 6,
		Fence = 7,
		DeviceMemory = 8,
		Buffer = 9,
		Image = 10,
		Event = 11,
		QueryPool = 12,
		BufferView = 13,
		ImageView = 14,
		ShaderModule = 15,
		PipelineCache = 16,
		PipelineLayout = 17,
		RenderPass = 18,
		Pipeline = 19,
		DescriptorSetLayout = 20,
		Sampler = 21,
		DescriptorPool = 22,
		DescriptorSet = 23,
		Framebuffer = 24,
		CommandPool = 25,
		SurfaceKhr = 26,
		SwapchainKhr = 27,
		DebugReportCallbackExt = 28,
		DebugReport = DebugReportCallbackExt,
		DisplayKhr = 29,
		DisplayModeKhr = 30,
		ObjectTableNvx = 31,
		IndirectCommandsLayoutNvx = 32,
		ValidationCacheExt = 33,
		ValidationCache = ValidationCacheExt,
		SamplerYcbcrConversion = 1000156000,
		DescriptorUpdateTemplate = 1000085000,
		DescriptorUpdateTemplateKhr = DescriptorUpdateTemplate,
		SamplerYcbcrConversionKhr = SamplerYcbcrConversion,
		AccelerationStructureNv = 1000165000,
	}

	public enum RasterizationOrderAmd : int
	{
		Strict = 0,
		Relaxed = 1,
	}

	[Flags]
	public enum ExternalMemoryHandleTypeFlagsNv : int
	{
		OpaqueWin32 = 0x1,
		OpaqueWin32Kmt = 0x2,
		D3D11Image = 0x4,
		D3D11ImageKmt = 0x8,
	}

	[Flags]
	public enum ExternalMemoryFeatureFlagsNv : int
	{
		DedicatedOnly = 0x1,
		Exportable = 0x2,
		Importable = 0x4,
	}

	public enum ValidationCheckExt : int
	{
		All = 0,
		Shaders = 1,
	}

	public enum ValidationFeatureEnableExt : int
	{
		GpuAssisted = 0,
		GpuAssistedReserveBindingSlot = 1,
	}

	public enum ValidationFeatureDisableExt : int
	{
		All = 0,
		Shaders = 1,
		ThreadSafety = 2,
		ApiParameters = 3,
		ObjectLifetimes = 4,
		CoreChecks = 5,
		UniqueHandles = 6,
	}

	[Flags]
	public enum ExternalMemoryHandleTypeFlags : int
	{
		OpaqueFd = 0x1,
		OpaqueWin32 = 0x2,
		OpaqueWin32Kmt = 0x4,
		D3D11Texture = 0x8,
		D3D11TextureKmt = 0x10,
		D3D12Heap = 0x20,
		D3D12Resource = 0x40,
		OpaqueFdKhr = OpaqueFd,
		OpaqueWin32Khr = OpaqueWin32,
		OpaqueWin32KmtKhr = OpaqueWin32Kmt,
		D3D11TextureKhr = D3D11Texture,
		D3D11TextureKmtKhr = D3D11TextureKmt,
		D3D12HeapKhr = D3D12Heap,
		D3D12ResourceKhr = D3D12Resource,
		DmaBufExt = 0x200,
		AndroidHardwareBufferAndroid = 0x400,
		HostAllocationExt = 0x80,
		HostMappedForeignMemoryExt = 0x100,
		DmaBufBitExt = DmaBufExt,
		HostAllocationBitExt = HostAllocationExt,
		HostMappedForeignMemoryBitExt = HostMappedForeignMemoryExt,
	}

	[Obsolete ("ExternalMemoryHandleTypeFlagsKhr is deprecated, please use ExternalMemoryHandleTypeFlags instead.")]
	[Flags]
	public enum ExternalMemoryHandleTypeFlagsKhr : int
	{
		OpaqueFd = 0x1,
		OpaqueWin32 = 0x2,
		OpaqueWin32Kmt = 0x4,
		D3D11Texture = 0x8,
		D3D11TextureKmt = 0x10,
		D3D12Heap = 0x20,
		D3D12Resource = 0x40,
		OpaqueFdKhr = OpaqueFd,
		OpaqueWin32Khr = OpaqueWin32,
		OpaqueWin32KmtKhr = OpaqueWin32Kmt,
		D3D11TextureKhr = D3D11Texture,
		D3D11TextureKmtKhr = D3D11TextureKmt,
		D3D12HeapKhr = D3D12Heap,
		D3D12ResourceKhr = D3D12Resource,
		DmaBufExt = 0x200,
		AndroidHardwareBufferAndroid = 0x400,
		HostAllocationExt = 0x80,
		HostMappedForeignMemoryExt = 0x100,
		DmaBufBitExt = DmaBufExt,
		HostAllocationBitExt = HostAllocationExt,
		HostMappedForeignMemoryBitExt = HostMappedForeignMemoryExt,
	}

	[Flags]
	public enum ExternalMemoryFeatureFlags : int
	{
		DedicatedOnly = 0x1,
		Exportable = 0x2,
		Importable = 0x4,
		DedicatedOnlyKhr = DedicatedOnly,
		ExportableKhr = Exportable,
		ImportableKhr = Importable,
	}

	[Obsolete ("ExternalMemoryFeatureFlagsKhr is deprecated, please use ExternalMemoryFeatureFlags instead.")]
	[Flags]
	public enum ExternalMemoryFeatureFlagsKhr : int
	{
		DedicatedOnly = 0x1,
		Exportable = 0x2,
		Importable = 0x4,
		DedicatedOnlyKhr = DedicatedOnly,
		ExportableKhr = Exportable,
		ImportableKhr = Importable,
	}

	[Flags]
	public enum ExternalSemaphoreHandleTypeFlags : int
	{
		OpaqueFd = 0x1,
		OpaqueWin32 = 0x2,
		OpaqueWin32Kmt = 0x4,
		D3D12Fence = 0x8,
		SyncFd = 0x10,
		OpaqueFdKhr = OpaqueFd,
		OpaqueWin32Khr = OpaqueWin32,
		OpaqueWin32KmtKhr = OpaqueWin32Kmt,
		D3D12FenceKhr = D3D12Fence,
		SyncFdKhr = SyncFd,
	}

	[Obsolete ("ExternalSemaphoreHandleTypeFlagsKhr is deprecated, please use ExternalSemaphoreHandleTypeFlags instead.")]
	[Flags]
	public enum ExternalSemaphoreHandleTypeFlagsKhr : int
	{
		OpaqueFd = 0x1,
		OpaqueWin32 = 0x2,
		OpaqueWin32Kmt = 0x4,
		D3D12Fence = 0x8,
		SyncFd = 0x10,
		OpaqueFdKhr = OpaqueFd,
		OpaqueWin32Khr = OpaqueWin32,
		OpaqueWin32KmtKhr = OpaqueWin32Kmt,
		D3D12FenceKhr = D3D12Fence,
		SyncFdKhr = SyncFd,
	}

	[Flags]
	public enum ExternalSemaphoreFeatureFlags : int
	{
		Exportable = 0x1,
		Importable = 0x2,
		ExportableKhr = Exportable,
		ImportableKhr = Importable,
	}

	[Obsolete ("ExternalSemaphoreFeatureFlagsKhr is deprecated, please use ExternalSemaphoreFeatureFlags instead.")]
	[Flags]
	public enum ExternalSemaphoreFeatureFlagsKhr : int
	{
		Exportable = 0x1,
		Importable = 0x2,
		ExportableKhr = Exportable,
		ImportableKhr = Importable,
	}

	[Flags]
	public enum SemaphoreImportFlags : int
	{
		Temporary = 0x1,
		TemporaryKhr = Temporary,
	}

	[Obsolete ("SemaphoreImportFlagsKhr is deprecated, please use SemaphoreImportFlags instead.")]
	[Flags]
	public enum SemaphoreImportFlagsKhr : int
	{
		Temporary = 0x1,
		TemporaryKhr = Temporary,
	}

	[Flags]
	public enum ExternalFenceHandleTypeFlags : int
	{
		OpaqueFd = 0x1,
		OpaqueWin32 = 0x2,
		OpaqueWin32Kmt = 0x4,
		SyncFd = 0x8,
		OpaqueFdKhr = OpaqueFd,
		OpaqueWin32Khr = OpaqueWin32,
		OpaqueWin32KmtKhr = OpaqueWin32Kmt,
		SyncFdKhr = SyncFd,
	}

	[Obsolete ("ExternalFenceHandleTypeFlagsKhr is deprecated, please use ExternalFenceHandleTypeFlags instead.")]
	[Flags]
	public enum ExternalFenceHandleTypeFlagsKhr : int
	{
		OpaqueFd = 0x1,
		OpaqueWin32 = 0x2,
		OpaqueWin32Kmt = 0x4,
		SyncFd = 0x8,
		OpaqueFdKhr = OpaqueFd,
		OpaqueWin32Khr = OpaqueWin32,
		OpaqueWin32KmtKhr = OpaqueWin32Kmt,
		SyncFdKhr = SyncFd,
	}

	[Flags]
	public enum ExternalFenceFeatureFlags : int
	{
		Exportable = 0x1,
		Importable = 0x2,
		ExportableKhr = Exportable,
		ImportableKhr = Importable,
	}

	[Obsolete ("ExternalFenceFeatureFlagsKhr is deprecated, please use ExternalFenceFeatureFlags instead.")]
	[Flags]
	public enum ExternalFenceFeatureFlagsKhr : int
	{
		Exportable = 0x1,
		Importable = 0x2,
		ExportableKhr = Exportable,
		ImportableKhr = Importable,
	}

	[Flags]
	public enum FenceImportFlags : int
	{
		Temporary = 0x1,
		TemporaryKhr = Temporary,
	}

	[Obsolete ("FenceImportFlagsKhr is deprecated, please use FenceImportFlags instead.")]
	[Flags]
	public enum FenceImportFlagsKhr : int
	{
		Temporary = 0x1,
		TemporaryKhr = Temporary,
	}

	[Flags]
	public enum SurfaceCounterFlagsExt : int
	{
		VblankExt = 0x1,
	}

	public enum DisplayPowerStateExt : int
	{
		Off = 0,
		Suspend = 1,
		On = 2,
	}

	public enum DeviceEventTypeExt : int
	{
		DisplayHotplug = 0,
	}

	public enum DisplayEventTypeExt : int
	{
		FirstPixelOut = 0,
	}

	[Flags]
	public enum PeerMemoryFeatureFlags : int
	{
		CopySrc = 0x1,
		CopyDst = 0x2,
		GenericSrc = 0x4,
		GenericDst = 0x8,
		CopySrcKhr = CopySrc,
		CopyDstKhr = CopyDst,
		GenericSrcKhr = GenericSrc,
		GenericDstKhr = GenericDst,
	}

	[Obsolete ("PeerMemoryFeatureFlagsKhr is deprecated, please use PeerMemoryFeatureFlags instead.")]
	[Flags]
	public enum PeerMemoryFeatureFlagsKhr : int
	{
		CopySrc = 0x1,
		CopyDst = 0x2,
		GenericSrc = 0x4,
		GenericDst = 0x8,
		CopySrcKhr = CopySrc,
		CopyDstKhr = CopyDst,
		GenericSrcKhr = GenericSrc,
		GenericDstKhr = GenericDst,
	}

	[Flags]
	public enum MemoryAllocateFlags : int
	{
		DeviceMask = 0x1,
		DeviceMaskKhr = DeviceMask,
	}

	[Obsolete ("MemoryAllocateFlagsKhr is deprecated, please use MemoryAllocateFlags instead.")]
	[Flags]
	public enum MemoryAllocateFlagsKhr : int
	{
		DeviceMask = 0x1,
		DeviceMaskKhr = DeviceMask,
	}

	[Flags]
	public enum DeviceGroupPresentModeFlagsKhr : int
	{
		Local = 0x1,
		Remote = 0x2,
		Sum = 0x4,
		LocalMultiDevice = 0x8,
	}

	[Flags]
	public enum SwapchainCreateFlagsKhr : int
	{
		SplitInstanceBindRegions = 0x1,
		Protected = 0x2,
		MutableFormat = 0x4,
	}

	[Flags]
	public enum SubgroupFeatureFlags : int
	{
		Basic = 0x1,
		Vote = 0x2,
		Arithmetic = 0x4,
		Ballot = 0x8,
		Shuffle = 0x10,
		ShuffleRelative = 0x20,
		Clustered = 0x40,
		Quad = 0x80,
		PartitionedNv = 0x100,
	}

	public enum TessellationDomainOrigin : int
	{
		UpperLeft = 0,
		LowerLeft = 1,
		UpperLeftKhr = UpperLeft,
		LowerLeftKhr = LowerLeft,
	}

	[Obsolete ("TessellationDomainOriginKhr is deprecated, please use TessellationDomainOrigin instead.")]
	public enum TessellationDomainOriginKhr : int
	{
		UpperLeft = 0,
		LowerLeft = 1,
		UpperLeftKhr = UpperLeft,
		LowerLeftKhr = LowerLeft,
	}

	public enum SamplerYcbcrModelConversion : int
	{
		RgbIdentity = 0,
		YcbcrIdentity = 1,
		Ycbcr709 = 2,
		Ycbcr601 = 3,
		Ycbcr2020 = 4,
		RgbIdentityKhr = RgbIdentity,
		YcbcrIdentityKhr = YcbcrIdentity,
		Ycbcr709Khr = Ycbcr709,
		Ycbcr601Khr = Ycbcr601,
		Ycbcr2020Khr = Ycbcr2020,
	}

	[Obsolete ("SamplerYcbcrModelConversionKhr is deprecated, please use SamplerYcbcrModelConversion instead.")]
	public enum SamplerYcbcrModelConversionKhr : int
	{
		RgbIdentity = 0,
		YcbcrIdentity = 1,
		Ycbcr709 = 2,
		Ycbcr601 = 3,
		Ycbcr2020 = 4,
		RgbIdentityKhr = RgbIdentity,
		YcbcrIdentityKhr = YcbcrIdentity,
		Ycbcr709Khr = Ycbcr709,
		Ycbcr601Khr = Ycbcr601,
		Ycbcr2020Khr = Ycbcr2020,
	}

	public enum SamplerYcbcrRange : int
	{
		ItuFull = 0,
		ItuNarrow = 1,
		ItuFullKhr = ItuFull,
		ItuNarrowKhr = ItuNarrow,
	}

	[Obsolete ("SamplerYcbcrRangeKhr is deprecated, please use SamplerYcbcrRange instead.")]
	public enum SamplerYcbcrRangeKhr : int
	{
		ItuFull = 0,
		ItuNarrow = 1,
		ItuFullKhr = ItuFull,
		ItuNarrowKhr = ItuNarrow,
	}

	public enum ChromaLocation : int
	{
		CositedEven = 0,
		Midpoint = 1,
		CositedEvenKhr = CositedEven,
		MidpointKhr = Midpoint,
	}

	[Obsolete ("ChromaLocationKhr is deprecated, please use ChromaLocation instead.")]
	public enum ChromaLocationKhr : int
	{
		CositedEven = 0,
		Midpoint = 1,
		CositedEvenKhr = CositedEven,
		MidpointKhr = Midpoint,
	}

	public enum SamplerReductionModeExt : int
	{
		WeightedAverage = 0,
		Min = 1,
		Max = 2,
	}

	public enum BlendOverlapExt : int
	{
		Uncorrelated = 0,
		Disjoint = 1,
		Conjoint = 2,
	}

	[Flags]
	public enum DebugUtilsMessageSeverityFlagsExt : int
	{
		Verbose = 0x1,
		Info = 0x10,
		Warning = 0x100,
		Error = 0x1000,
	}

	[Flags]
	public enum DebugUtilsMessageTypeFlagsExt : int
	{
		General = 0x1,
		Validation = 0x2,
		Performance = 0x4,
	}

	public enum FullScreenExclusiveExt : int
	{
		Default = 0,
		Allowed = 1,
		Disallowed = 2,
		ApplicationControlled = 3,
	}

	public enum VendorId : int
	{
		Viv = 0x10001,
		Vsi = 0x10002,
		Kazan = 0x10003,
	}

	public enum DriverIdKhr : int
	{
		AmdProprietary = 1,
		AmdOpenSource = 2,
		MesaRadv = 3,
		NvidiaProprietary = 4,
		IntelProprietaryWindows = 5,
		IntelOpenSourceMesa = 6,
		ImaginationProprietary = 7,
		QualcommProprietary = 8,
		ArmProprietary = 9,
		GoogleSwiftshader = 10,
		GGPProprietary = 11,
	}

	public enum ShadingRatePaletteEntryNv : int
	{
		NoInvocations = 0,
		Rate16InvocationsPerPixel = 1,
		Rate8InvocationsPerPixel = 2,
		Rate4InvocationsPerPixel = 3,
		Rate2InvocationsPerPixel = 4,
		Rate1InvocationPerPixel = 5,
		Rate1InvocationPer2X1Pixels = 6,
		Rate1InvocationPer1X2Pixels = 7,
		Rate1InvocationPer2X2Pixels = 8,
		Rate1InvocationPer4X2Pixels = 9,
		Rate1InvocationPer2X4Pixels = 10,
		Rate1InvocationPer4X4Pixels = 11,
	}

	public enum CoarseSampleOrderTypeNv : int
	{
		Default = 0,
		Custom = 1,
		PixelMajor = 2,
		SampleMajor = 3,
	}
}
